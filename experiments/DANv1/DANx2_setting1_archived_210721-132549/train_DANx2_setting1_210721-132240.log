21-07-21 13:22:42.468 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-21 13:22:42.471 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-21 13:22:44.973 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 13:22:44.973 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 13:22:44.978 - INFO: Model [B_Model] is created.
21-07-21 13:25:49.707 - INFO: Path already exists. Rename it to [/content/DAN/experiments/DANv1/DANx2_setting1_archived_210721-132549]
21-07-21 13:25:49.769 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-21 13:25:49.775 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-21 13:25:49.925 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 13:25:49.926 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 13:25:49.934 - INFO: Model [B_Model] is created.
21-07-21 13:27:22.785 - INFO: Path already exists. Rename it to [/content/DAN/experiments/DANv1/DANx2_setting1_archived_210721-132722]
21-07-21 13:27:22.857 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-21 13:27:22.860 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-21 13:27:22.996 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 13:27:22.997 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 13:27:23.005 - INFO: Model [B_Model] is created.
21-07-21 13:30:40.148 - INFO: Path already exists. Rename it to [/content/DAN/experiments/DANv1/DANx2_setting1_archived_210721-133040]
21-07-21 13:30:40.218 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-21 13:30:40.224 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-21 13:30:40.361 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 13:30:40.363 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 13:30:40.371 - INFO: Model [B_Model] is created.
21-07-21 13:32:19.520 - INFO: Path already exists. Rename it to [/content/DAN/experiments/DANv1/DANx2_setting1_archived_210721-133219]
21-07-21 13:32:19.598 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-21 13:32:19.602 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-21 13:32:19.732 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 13:32:19.733 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 13:32:19.742 - INFO: Model [B_Model] is created.
