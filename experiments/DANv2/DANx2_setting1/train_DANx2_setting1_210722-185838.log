21-07-22 18:58:38.910 - INFO: Dataset [GTDataset - DIV2K] is created.
21-07-22 18:58:38.915 - INFO: Dataset [LQGTDataset - DIV2KRK] is created.
21-07-22 18:58:41.687 - INFO: Network G structure: DataParallel - DAN, with parameters: 992,050
21-07-22 18:58:41.687 - INFO: DAN(
  (Restorer): Restorer(
    (head1): conv_ds(
      (conv): Sequential(
        (0): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=3)
        (1): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (head2): conv_ds(
      (conv): Sequential(
        (0): Conv2d(10, 10, kernel_size=(1, 1), stride=(1, 1), groups=10)
        (1): Conv2d(10, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (body): Sequential(
      (0): DPCG(
        (body): Sequential(
          (0): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (1): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (2): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (3): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (4): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (5): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (6): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (7): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (8): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (9): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
        )
      )
      (1): DPCG(
        (body): Sequential(
          (0): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (1): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (2): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (3): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (4): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (5): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (6): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (7): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (8): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (9): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
        )
      )
      (2): DPCG(
        (body): Sequential(
          (0): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (1): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (2): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (3): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (4): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (5): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (6): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (7): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (8): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (9): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
        )
      )
      (3): DPCG(
        (body): Sequential(
          (0): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (1): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (2): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (3): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (4): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (5): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (6): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (7): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (8): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (9): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
        )
      )
      (4): DPCG(
        (body): Sequential(
          (0): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (1): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (2): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (3): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (4): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (5): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (6): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (7): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (8): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
          (9): DPCB(
            (body1): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
            (body2): Sequential(
              (0): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
              (1): LeakyReLU(negative_slope=0.2, inplace=True)
              (2): conv_ds(
                (conv): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
                  (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                )
              )
            )
          )
        )
      )
    )
    (fusion): conv_ds(
      (conv): Sequential(
        (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
        (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (upscale): Sequential(
      (0): conv_ds(
        (conv): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (1): PixelShuffle(upscale_factor=2)
      (2): conv_ds(
        (conv): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
          (1): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (Estimator): Estimator(
    (head_LR): Sequential(
      (0): conv_ds(
        (conv): Sequential(
          (0): Conv2d(3, 3, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=3)
          (1): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (head_HR): Sequential(
      (0): conv_ds(
        (conv): Sequential(
          (0): Conv2d(3, 3, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=3)
          (1): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (body): DPCG(
      (body): Sequential(
        (0): DPCB(
          (body1): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
          (body2): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
        )
        (1): DPCB(
          (body1): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
          (body2): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
        )
        (2): DPCB(
          (body1): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
          (body2): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
        )
        (3): DPCB(
          (body1): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
          (body2): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
        )
        (4): DPCB(
          (body1): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
          (body2): Sequential(
            (0): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
            (1): LeakyReLU(negative_slope=0.2, inplace=True)
            (2): conv_ds(
              (conv): Sequential(
                (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
              )
            )
          )
        )
      )
    )
    (tail): Sequential(
      (0): conv_ds(
        (conv): Sequential(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          (1): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (1): AdaptiveAvgPool2d(output_size=1)
      (2): conv_ds(
        (conv): Sequential(
          (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), groups=64)
          (1): Conv2d(64, 441, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (3): Softmax(dim=1)
    )
  )
)
21-07-22 18:58:41.699 - INFO: Model [B_Model] is created.
