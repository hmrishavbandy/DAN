21-07-21 14:36:38.716 - INFO:   name: DANx2_setting1
  suffix: None
  model: blind
  distortion: sr
  scale: 2
  crop_border: None
  gpu_ids: [0]
  pca_matrix_path: /content/DAN/pca_matrix/DANv1/pca_matrix.pth
  datasets:[
    test1:[
      name: S
      mode: LQGT
      dataroot_GT: /content/Lmdb_data/HR.lmdb
      dataroot_LQ: /content/Lmdb_data/LRblur.lmdb
      phase: test1
      scale: 2
      data_type: lmdb
    ]
  ]
  network_G:[
    which_model_G: DAN
    setting:[
      nf: 64
      nb: 40
      input_para: 10
      loop: 4
      kernel_size: 21
      pca_matrix_path: /content/DAN/pca_matrix/DANv1/pca_matrix.pth
      upscale: 2
    ]
  ]
  path:[
    pretrain_model_G: /content/DAN/experiments/DANv1/DANx2_setting1/models/latest_G.pth
    root: /content/DAN
    results_root: /content/DAN/results/DANv1/DANx2_setting1
    log: /content/DAN/results/DANv1/DANx2_setting1
  ]
  is_train: False

21-07-21 14:36:38.743 - INFO: Dataset [LQGTDataset - S] is created.
21-07-21 14:36:38.758 - INFO: Number of test images in [S]: 800
21-07-21 14:36:39.162 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 14:36:39.179 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 14:36:39.194 - INFO: Loading model for G [/content/DAN/experiments/DANv1/DANx2_setting1/models/latest_G.pth] ...
21-07-21 14:36:39.433 - INFO: Model [B_Model] is created.
21-07-21 14:36:39.458 - INFO: 
Testing [S]...
21-07-21 14:37:16.895 - INFO: img:sig1.8_0009     - PSNR: 18.323149 dB; SSIM: 0.338666; PSNR_Y: 20.289239 dB; SSIM_Y: 0.465986.
21-07-21 14:37:54.500 - INFO: img:sig1.8_0027     - PSNR: 21.348937 dB; SSIM: 0.540572; PSNR_Y: 23.212838 dB; SSIM_Y: 0.740865.
21-07-21 14:38:42.062 - INFO: img:sig1.8_0028     - PSNR: 20.897382 dB; SSIM: 0.417484; PSNR_Y: 23.962762 dB; SSIM_Y: 0.599599.
21-07-21 14:39:14.849 - INFO: img:sig1.8_0035     - PSNR: 20.593118 dB; SSIM: 0.336286; PSNR_Y: 22.538753 dB; SSIM_Y: 0.498235.
21-07-21 14:39:42.318 - INFO: img:sig1.8_0047     - PSNR: 20.253675 dB; SSIM: 0.424281; PSNR_Y: 22.740782 dB; SSIM_Y: 0.655564.
21-07-21 14:40:09.778 - INFO: img:sig1.8_0049     - PSNR: 20.341934 dB; SSIM: 0.335058; PSNR_Y: 23.037433 dB; SSIM_Y: 0.459829.
21-07-21 14:40:44.378 - INFO: img:sig1.8_0062     - PSNR: 22.299703 dB; SSIM: 0.510633; PSNR_Y: 25.132945 dB; SSIM_Y: 0.621565.
21-07-21 14:41:11.616 - INFO: img:sig1.8_0070     - PSNR: 17.398843 dB; SSIM: 0.275306; PSNR_Y: 19.347267 dB; SSIM_Y: 0.369624.
21-07-21 14:41:39.075 - INFO: img:sig1.8_0072     - PSNR: 21.300648 dB; SSIM: 0.386608; PSNR_Y: 23.549487 dB; SSIM_Y: 0.546621.
21-07-21 14:42:06.693 - INFO: img:sig1.8_0086     - PSNR: 17.300214 dB; SSIM: 0.265518; PSNR_Y: 19.426807 dB; SSIM_Y: 0.436410.
21-07-21 14:42:34.390 - INFO: img:sig1.8_0090     - PSNR: 20.606342 dB; SSIM: 0.504519; PSNR_Y: 22.803357 dB; SSIM_Y: 0.692480.
21-07-21 14:43:06.250 - INFO: img:sig1.8_0105     - PSNR: 22.228666 dB; SSIM: 0.361479; PSNR_Y: 24.688148 dB; SSIM_Y: 0.551744.
21-07-21 14:43:43.597 - INFO: img:sig1.8_0108     - PSNR: 18.582802 dB; SSIM: 0.414727; PSNR_Y: 20.600944 dB; SSIM_Y: 0.540144.
21-07-21 14:44:11.151 - INFO: img:sig1.8_0109     - PSNR: 21.050252 dB; SSIM: 0.374556; PSNR_Y: 22.201109 dB; SSIM_Y: 0.715594.
21-07-21 14:44:44.178 - INFO: img:sig1.8_0119     - PSNR: 18.050891 dB; SSIM: 0.299550; PSNR_Y: 20.515011 dB; SSIM_Y: 0.482317.
21-07-21 14:45:11.828 - INFO: img:sig1.8_0121     - PSNR: 20.354379 dB; SSIM: 0.431204; PSNR_Y: 22.625844 dB; SSIM_Y: 0.699358.
21-07-21 14:46:20.561 - INFO: Dataset [LQGTDataset - S] is created.
21-07-21 14:46:20.730 - INFO: Network G structure: DataParallel - DAN, with parameters: 4,181,799
21-07-21 14:46:20.760 - INFO: DAN(
  (Restorer): Restorer(
    (head): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (5): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (6): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (7): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (8): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (9): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (10): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (11): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (12): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (13): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (14): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (15): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (16): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (17): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (18): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (19): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (20): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (21): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (22): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (23): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (24): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (25): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (26): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (27): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (28): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (29): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (30): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (31): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (32): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (33): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (34): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (35): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (36): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (37): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (38): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (39): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(74, 74, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(74, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (fusion): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (upscale): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (Estimator): Estimator(
    (head_LR): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1))
    (head_HR): Conv2d(3, 32, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4))
    (body): Sequential(
      (0): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (1): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (2): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (3): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
      (4): CRB_Layer(
        (body): Sequential(
          (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): CALayer(
            (body): Sequential(
              (0): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
              (1): LeakyReLU(negative_slope=0.2)
              (2): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
              (3): Sigmoid()
            )
            (avg): AdaptiveAvgPool2d(output_size=1)
          )
        )
      )
    )
    (out): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (globalPooling): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
21-07-21 14:46:20.801 - INFO: Loading model for G [/content/DAN/experiments/DANv1/DANx2_setting1/models/latest_G.pth] ...
21-07-21 14:46:21.001 - INFO: Model [B_Model] is created.
